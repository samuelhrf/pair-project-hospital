<%
if(typeof data !== 'undefined'){
if(!Array.isArray(data)){
    data = [data];}}

toUpper = function (str) {
    return str
        .split(' ')
        .map(function (word) {
            return word[0].toUpperCase() + word.substr(1);
        })
        .join(' ');
}

processTitles = function (str) {
    return toUpper(str.replace('_', ' '));
}

formatDateNum = function (num) {
    if (num < 10)
        return `0${num}`;
    else
        return num;
}

dateToString = function (date) {
    return `${formatDateNum(date.getDate())}/${formatDateNum(date.getMonth() + 1)}/${date.getFullYear()}`;
}

dateToPicker = function (date) {
    if (Object.prototype.toString.call(date) === '[object Date]')
    return `${date.getFullYear()}-${formatDateNum(date.getMonth() + 1)}-${formatDateNum(date.getDate())}`;
    else
    return ``;
}

getFormInput = function (array, key, dataType) {
    Object.prototype.toString.call(array[key]) === '[object Object]' ? array[key] = undefined : null;
    switch (key) {
        case 'genre':
            return `<select class="custom-select custom-select mt-3" name="genre">
                    ${ getGenreDropdown(array, key) };
                </select>`;
        case 'ProductionHouseId':
            return `<select class="custom-select custom-select mt-3" name="ProductionHouseId">
                    ${ getProdHouseDropdown(array, key) };
                </select>`;
        case 'released_year':
            return `<input id="${ key }" ${ isNullAllowed(dataType, key) } name="${ key }" type="number" class="form-control mt-3" 
                min="1900" max="${ new Date().getFullYear() + 5 }" step="1" placeholder="${ processTitles(key) }" value="${ getValue(array, key) }">`
        default:
            return `<input id="${ key }" ${ isNullAllowed(dataType, key) } name="${ key }" type="text" class="form-control mt-3"
                placeholder="${ processTitles(key) }" value="${ getValue(array, key) }">`
    }
}

isNullAllowed = function (dataType, key) {
    const map = {
        'ProductionHouse': [ 'name_prodHouse', 'headquarters' ],
        'Movie': [ 'name', 'released_year' ]
    }
    for (let i in map)
        if (i == dataType)
            for (let j in map[i])
                if (map[i][j] == key)
                    return 'required="required"';
    return '';
}

unknownIfEmpty = function (value) {
    let result = value;
    if (value == null)
        result = 'N/A';
    return result;
}

getGenreDropdown = function (array, key) {
    const choices = [ 
        'animation',
        'comedy',
        'drama',
        'horor',
        'religius',
        'thriller' 
    ]
    let htmlResult = '';
    for (let i in choices) {
        if (choices[i] == array[key])
            htmlResult += `<option selected="selected" value="${choices[i]}">${processTitles(choices[i])}</option>\n`;
        else
            htmlResult += `<option value="${choices[i]}">${processTitles(choices[i])}</option>\n`;
    }
    return htmlResult;
}

getProdHouseDropdown = function (array, key) {
    let htmlResult = '';
    let selected = false;
    for (let i in productionHouses) {
        const prodHouseObj = productionHouses[i]['dataValues'];
        if (prodHouseObj['id'] == array[key]) {
            htmlResult += `<option selected="selected" value="${prodHouseObj['id']}">${prodHouseObj['name_prodHouse']}</option>\n`;
            selected = true;
        }
        else
            htmlResult += `<option value="${prodHouseObj['id']}">${prodHouseObj['name_prodHouse']}</option>\n`;
    }
    if (selected) 
        return `<option value="">--------</option>\n` + htmlResult;
    else
        return `<option selected="selected" value="">--------</option>\n` + htmlResult;
}

getSearchDropdown = function (data) {
    let htmlResult = '';
    for (let key in data[0]['dataValues']) { 
        if (key != 'ProductionHouse')
            htmlResult += `<option value="${key}">${processTitles(key)}</option>\n`;
    }
    return htmlResult;
}

getValue = function (array, key) {
    if (array[key] == undefined)
        array[key] = '';
    return array[key];
}
%>